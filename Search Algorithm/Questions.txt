Binary Search: Search a sorted array by repeatedly dividing the search interval in half. Begin with an interval covering the whole array. 
               If the value of the search key is less than the item in the middle of the interval, narrow the interval to the lower half. 
               Otherwise narrow it to the upper half. Repeatedly check until the value is found or the interval is empty.

Binary Search Recursion: Implement binary search using recursion. 

Linear Search: Linear search is a very simple search algorithm. In this type of search, a sequential search is made over all items one by                  one. Every item is checked and if a match is found then that particular item is returned, otherwise the search continues                    till the end of the data collection.

Search - Find First and Last Position:
         Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
         Your algorithm's runtime complexity must be in the order of O(log n).
         If the target is not found in the array, return [-1, -1].
         Example 1:
         Input: nums = [5,7,7,8,8,10], target = 8
         Output: [3,4]
         Example 2:
         Input: nums = [5,7,7,8,8,10], target = 6
         Output: [-1,-1]
